[error] failed to parse value &spacemanagement.PermanentSchedule{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, ScheduleID:0x0, StartDate:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), EndDate:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), IsAvailable:false, Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, Classroom:spacemanagement.Room{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, RoomID:0x0, RoomName:"", RoomType:"", Description:(*string)(nil), Floor:0, Building:(*string)(nil), Location:(*string)(nil), Capacity:0, IsRoomOutOfService:false, Instrument:[]spacemanagement.InstrumentManagement(nil), Supply:[]spacemanagement.SupplyManagement(nil)}, Course:model.Course{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculum:model.Curriculum{CurriculumId:0x0, Name:"", StartYear:0, EndYear:0, DepartmentName:"", Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Ins0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, RoomID:0x0, RoomName:"", RoomType:"", Description:(*string)(nil), Floor:0, Building:(*string)(nil), Location:(*string)(nil), Capacity:0, IsRoomOutOfService:false, Instrument:[]spacemanagement.InstrumentManagement(nil), Supply:[]spacemanagement.SupplyManagement(nil)}, Course:model.Course{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculum:model.Curriculum{CurriculumId:0x0, Name:"", StartYear:0, EndYear:0, DepartmentName:"", Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Insity:0, IsRoomOutOfService:false, Instrument:[]spacemanagement.InstrumentManagement(nil), Supply:[]spacemanagement.SupplyManagement(nil)}, Course:model.Course{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculum:model.Curriculum{CurriculumId:0x0, Name:"", StartYear:0, EndYear:0, DepartmentName:"", Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Insrse{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculum:model.Curriculum{CurriculumId:0x0, Name:"", StartYear:0, EndYear:0, DepartmentName:"", Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valiry, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisitetructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Class:model.Class{ClassId:0x0, CourseId:0x0, Course:model.Course{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculu:[]model.Course(nil)}, Class:model.Class{ClassId:0x0, CourseId:0x0, Course:model.Course{CourseId:0x0, Name:"", Description:"", CurriculumId:0x0, Curriculum:model.Curriculum{CurriculumId:0x0, Name:"", StartYear:0, EndYear:0, DepartmentName:"", Department:model.Department{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Faculty:model.Faculty{Model:gorm.Model{ID:0x0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0,0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Section:0, Schedule:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), StudentList:[]model.Student(nil), Instructors:[]model.Instructor(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}}, got error invalid field found for struct ModEd/common/model.Department's field Faculty: define a valid foreign key for relations or implemen 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Section:0, Schedule:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), StudentList:[]model.Student(nil), Instructors:[]model.Instructor(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time. 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Section:0, Schedule:time.Date(1, time.January,  0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Del 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseL 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseL 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseL 0, time.UTC), Valid:false}}, Name:"", Budget:0}, Students:[]model.Student(nil), Instructors:(*[]model.Instructor)(nil), Budget:0}, ProgramType:0, CourseList:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Delist:[]model.Course(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, timeetedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}, Optional:false, CourseStatus:0, CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Section:0, Schedule:time.Date(1, time.January, , 1, 0, 0, 0, 0, time.UTC), Valid:false}, ClassList:[]model.Class(nil), Prerequisite:[]model.Course(nil)}, Section:0, Schedule:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), StudentList:[]model.Student(nil), Instructors:[]model.Instructor(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.1, 0, 0, 0, 0, time.UTC), StudentList:[]model.Student(nil), Instructors:[]model.Instructor(nil), CreatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), VaUTC), UpdatedAt:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletedAt:gorm.DeletedAt{Time:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Valid:false}}}, got error invalid field found for struct ModEd/common/model.Department's field Faculty: define a valid foreign key for relations or implemenlid:false}}}, got error invalid field found for struct ModEd/common/model.Department's field Faculty: define a valid foreign key for relations or implement the Valuer/Scanner interface